main() <int main () at cpp-algortihms_4fb2dbd/priorityQueue.c:102>:
    createHeap() <Heap_p createHeap () at cpp-algortihms_4fb2dbd/priorityQueue.c:94>:
        malloc()
    heap_insert() <void heap_insert (Heap_p H, int key) at cpp-algortihms_4fb2dbd/priorityQueue.c:48>:
        realloc()
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/priorityQueue.c:21>:
            printf()
            abort()
        PARENT()
    printf()
    heap_extract_min() <int heap_extract_min (Heap_p H) at cpp-algortihms_4fb2dbd/priorityQueue.c:68>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/priorityQueue.c:21>:
            printf()
            abort()
        heapify() <void heapify (Heap_p H, int i) at cpp-algortihms_4fb2dbd/priorityQueue.c:31> (R):
            LEFT()
            RIGHT()
            swap() <inline void swap (int *num1, int *num2) at cpp-algortihms_4fb2dbd/priorityQueue.c:19>
            MID_HEAP_INDEX()
            heapify() <void heapify (Heap_p H, int i) at cpp-algortihms_4fb2dbd/priorityQueue.c:31> (recursive: see 15)
main() <int main () at cpp-algortihms_4fb2dbd/dijkstra.c:313>:
    createGraph() <Graph_p createGraph () at cpp-algortihms_4fb2dbd/dijkstra.c:96>:
        malloc()
    createVertex() <Vertex_p createVertex (GraphElementT val) at cpp-algortihms_4fb2dbd/dijkstra.c:104>:
        malloc()
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:6>:
            printf()
            abort()
    addVertex() <void addVertex (Graph_p graph, Vertex_p vertex) at cpp-algortihms_4fb2dbd/dijkstra.c:126>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:6>:
            printf()
            abort()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:11>:
            printf()
    addEdge() <void addEdge (Graph_p g, Vertex_p src, Vertex_p dest, size_t wt) at cpp-algortihms_4fb2dbd/dijkstra.c:152>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:6>:
            printf()
            abort()
        malloc()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:11>:
            printf()
    dijkstra() <void dijkstra (Graph_p g, Vertex_p s) at cpp-algortihms_4fb2dbd/dijkstra.c:289>:
        initializeSingleSource() <void initializeSingleSource (Graph_p g, Vertex_p s) at cpp-algortihms_4fb2dbd/dijkstra.c:271>:
        createHeap() <Heap_p createHeap () at cpp-algortihms_4fb2dbd/dijkstra.c:260>:
            malloc()
        heap_insert() <void heap_insert (Heap_p H, Vertex_p v) at cpp-algortihms_4fb2dbd/dijkstra.c:223>:
            realloc()
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:6>:
                printf()
                abort()
            PARENT()
        heap_extract_min() <Vertex_p heap_extract_min (Heap_p H) at cpp-algortihms_4fb2dbd/dijkstra.c:244>:
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/dijkstra.c:6>:
                printf()
                abort()
            heapify() <void heapify (Heap_p H, int i) at cpp-algortihms_4fb2dbd/dijkstra.c:206> (R):
                LEFT()
                RIGHT()
                swap() <inline void swap (void *num1, void *num2) at cpp-algortihms_4fb2dbd/dijkstra.c:204>
                MID_HEAP_INDEX()
                heapify() <void heapify (Heap_p H, int i) at cpp-algortihms_4fb2dbd/dijkstra.c:206> (recursive: see 36)
        relax() <inline void relax (Vertex_p u, Vertex_p v, int wt) at cpp-algortihms_4fb2dbd/dijkstra.c:282>
main() <int main () at cpp-algortihms_4fb2dbd/mst_kruskal.c:299>:
    createGraph() <Graph_p createGraph () at cpp-algortihms_4fb2dbd/mst_kruskal.c:96>:
        malloc()
    createVertex() <Vertex_p createVertex (GraphElementT val) at cpp-algortihms_4fb2dbd/mst_kruskal.c:104>:
        malloc()
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
            printf()
            abort()
    addVertex() <void addVertex (Graph_p graph, Vertex_p vertex) at cpp-algortihms_4fb2dbd/mst_kruskal.c:124>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
            printf()
            abort()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:54>:
            printf()
    addEdge() <void addEdge (Graph_p g, Vertex_p src, Vertex_p dest, size_t wt) at cpp-algortihms_4fb2dbd/mst_kruskal.c:150>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
            printf()
            abort()
        malloc()
        realloc()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:54>:
            printf()
    mst_Kruskal() <MSTGraph_p mst_Kruskal (Graph_p g) at cpp-algortihms_4fb2dbd/mst_kruskal.c:244>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
            printf()
            abort()
        qsort()
        compareEdgeWeights() <int compareEdgeWeights (const void *edge1, const void *edge2) at cpp-algortihms_4fb2dbd/mst_kruskal.c:231>:
        makeSet() <SetElement_p makeSet (void *x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:12>:
            malloc()
        malloc()
        findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (R):
            findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (recursive: see 32)
        createVertex() <Vertex_p createVertex (GraphElementT val) at cpp-algortihms_4fb2dbd/mst_kruskal.c:104>:
            malloc()
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
                printf()
                abort()
        realloc()
        Union() <void Union (SetElement_p x, SetElement_p y) at cpp-algortihms_4fb2dbd/mst_kruskal.c:42>:
            link() <void link (SetElement_p x, SetElement_p y) at cpp-algortihms_4fb2dbd/mst_kruskal.c:29>
            findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (R):
                findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (recursive: see 42)
    printf()
    getMSTWeight() <size_t getMSTWeight (Graph_p g) at cpp-algortihms_4fb2dbd/mst_kruskal.c:286>:
        mst_Kruskal() <MSTGraph_p mst_Kruskal (Graph_p g) at cpp-algortihms_4fb2dbd/mst_kruskal.c:244>:
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
                printf()
                abort()
            qsort()
            compareEdgeWeights() <int compareEdgeWeights (const void *edge1, const void *edge2) at cpp-algortihms_4fb2dbd/mst_kruskal.c:231>:
            makeSet() <SetElement_p makeSet (void *x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:12>:
                malloc()
            malloc()
            findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (R):
                findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (recursive: see 55)
            createVertex() <Vertex_p createVertex (GraphElementT val) at cpp-algortihms_4fb2dbd/mst_kruskal.c:104>:
                malloc()
                print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/mst_kruskal.c:49>:
                    printf()
                    abort()
            realloc()
            Union() <void Union (SetElement_p x, SetElement_p y) at cpp-algortihms_4fb2dbd/mst_kruskal.c:42>:
                link() <void link (SetElement_p x, SetElement_p y) at cpp-algortihms_4fb2dbd/mst_kruskal.c:29>
                findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (R):
                    findSet() <SetElement_p findSet (SetElement_p x) at cpp-algortihms_4fb2dbd/mst_kruskal.c:21> (recursive: see 65)
main() <int main () at cpp-algortihms_4fb2dbd/lcs.c:156>:
    MU_RUN_SUITE()
    MU_REPORT()
main() <int main () at cpp-algortihms_4fb2dbd/undirectedGraph.c:172>:
    createGraph() <Graph_p createGraph () at cpp-algortihms_4fb2dbd/undirectedGraph.c:52>:
        malloc()
    createVertex() <Vertex_p createVertex (GraphElementT val) at cpp-algortihms_4fb2dbd/undirectedGraph.c:58>:
        malloc()
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:5>:
            printf()
            abort()
    addVertex() <void addVertex (Graph_p graph, Vertex_p vertex) at cpp-algortihms_4fb2dbd/undirectedGraph.c:76>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:5>:
            printf()
            abort()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:10>:
            printf()
    addEdge() <void addEdge (Vertex_p src, Vertex_p dest) at cpp-algortihms_4fb2dbd/undirectedGraph.c:102>:
        print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:5>:
            printf()
            abort()
        malloc()
        print_successMsg() <inline void print_successMsg (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:10>:
            printf()
    printf()
    isDestReachable() <bool isDestReachable (Graph_p graph_p, Vertex_p src, Vertex_p dest) at cpp-algortihms_4fb2dbd/undirectedGraph.c:167>:
        markAllVerticesAsNotVisited() <void markAllVerticesAsNotVisited (Graph_p graph_p) at cpp-algortihms_4fb2dbd/undirectedGraph.c:156>:
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:5>:
                printf()
                abort()
        isReachable() <bool isReachable (Vertex_p src, Vertex_p dest) at cpp-algortihms_4fb2dbd/undirectedGraph.c:131> (R):
            print_error() <inline void print_error (char *msg) at cpp-algortihms_4fb2dbd/undirectedGraph.c:5>:
                printf()
                abort()
            isReachable() <bool isReachable (Vertex_p src, Vertex_p dest) at cpp-algortihms_4fb2dbd/undirectedGraph.c:131> (recursive: see 28)
main() <int main (int argc, char *argv[]) at cpp-algortihms_4fb2dbd/minunit/minunit_example.c:69>:
    MU_RUN_SUITE()
    MU_REPORT()
main() <int main () at cpp-algortihms_4fb2dbd/circularQueue.c:61>:
    createQueue() <QueuePtr createQueue (int maxsize) at cpp-algortihms_4fb2dbd/circularQueue.c:21>:
        malloc()
        calloc()
    enqueue() <void enqueue (QueuePtr q, int item) at cpp-algortihms_4fb2dbd/circularQueue.c:38>:
        isQueueFull() <int isQueueFull (QueuePtr q) at cpp-algortihms_4fb2dbd/circularQueue.c:30>
        fprintf()
    fprintf()
    dequeue() <int dequeue (QueuePtr q) at cpp-algortihms_4fb2dbd/circularQueue.c:49>:
        isQueueEmpty() <int isQueueEmpty (QueuePtr q) at cpp-algortihms_4fb2dbd/circularQueue.c:34>
        fprintf()
main() <int main () at cpp-algortihms_4fb2dbd/disjointSets.c:67>:
    makeSet() <SetElement *makeSet (void *x) at cpp-algortihms_4fb2dbd/disjointSets.c:32>:
        malloc()
    assert()
    findSet() <SetElement *findSet (SetElement *x) at cpp-algortihms_4fb2dbd/disjointSets.c:41> (R):
        findSet() <SetElement *findSet (SetElement *x) at cpp-algortihms_4fb2dbd/disjointSets.c:41> (recursive: see 5)
    Union() <void Union (SetElement *x, SetElement *y) at cpp-algortihms_4fb2dbd/disjointSets.c:63>:
        link() <void link (SetElement *x, SetElement *y) at cpp-algortihms_4fb2dbd/disjointSets.c:50>
        findSet() <SetElement *findSet (SetElement *x) at cpp-algortihms_4fb2dbd/disjointSets.c:41> (R):
            findSet() <SetElement *findSet (SetElement *x) at cpp-algortihms_4fb2dbd/disjointSets.c:41> (recursive: see 9)
main() <int main () at cpp-algortihms_4fb2dbd/fibonacci.c:28>:
    calloc()
    betterfib() <unsigned long long int betterfib (int n, unsigned long long int *arr) at cpp-algortihms_4fb2dbd/fibonacci.c:12> (R):
        betterfib() <unsigned long long int betterfib (int n, unsigned long long int *arr) at cpp-algortihms_4fb2dbd/fibonacci.c:12> (recursive: see 3)
    printf()
main() <int main () at cpp-algortihms_4fb2dbd/insertionsort.c:45>:
    insertion_sort() <int *insertion_sort (int *lptr, size_t n) at cpp-algortihms_4fb2dbd/insertionsort.c:17>
    printf()
    print_array() <void print_array (int *lptr, size_t n) at cpp-algortihms_4fb2dbd/insertionsort.c:35>:
        printf()
main() <int main () at cpp-algortihms_4fb2dbd/minCoinsToGetSum.c:57>:
    getMinNumOfCoins() <int getMinNumOfCoins (int *v, size_t vsize, int sum) at cpp-algortihms_4fb2dbd/minCoinsToGetSum.c:16>:
        calloc()
        printf()
    printf()
main() <int main () at cpp-algortihms_4fb2dbd/ratsSurface.c:455>:
    RatsPostions() <char **RatsPostions (char *input1[], char *input2[], int input3) at cpp-algortihms_4fb2dbd/ratsSurface.c:68>:
        getLengthOfStrArray() <int getLengthOfStrArray (char **str) at cpp-algortihms_4fb2dbd/ratsSurface.c:426>:
        getMaxY() <int getMaxY (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:411>
        calloc()
        initializeRatFromStr() <Rat_p initializeRatFromStr (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:446>:
            getPosFromStr() <Pos_p getPosFromStr (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:322>:
                strndup()
                strlen()
                strtok()
                myAtoi() <int myAtoi (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:390>
                initializePos() <Pos_p initializePos (int x, int y) at cpp-algortihms_4fb2dbd/ratsSurface.c:229>:
                    calloc()
                free()
            initializeRat() <Rat_p initializeRat (Pos_p p) at cpp-algortihms_4fb2dbd/ratsSurface.c:439>:
                calloc()
        initializeTemp() <int **initializeTemp (char **strArray) at cpp-algortihms_4fb2dbd/ratsSurface.c:237>:
            calloc()
            getIntsFromTempString() <int *getIntsFromTempString (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:258>:
                calloc()
                myAtoi() <int myAtoi (char *str) at cpp-algortihms_4fb2dbd/ratsSurface.c:390>
                strndup()
                strlen()
                strtok()
                free()
        moveRat() <void moveRat (Rat_p rat, int **T, int maxX, int maxY) at cpp-algortihms_4fb2dbd/ratsSurface.c:223>:
            bestDirToMove() <Dir bestDirToMove (int **T, int maxX, int maxY, Pos_p pos) at cpp-algortihms_4fb2dbd/ratsSurface.c:112>:
                change_in_temp() <int change_in_temp (int **T, int x1, int y1, int x2, int y2) at cpp-algortihms_4fb2dbd/ratsSurface.c:106>:
                    abs_value() <int abs_value (int t1, int t2) at cpp-algortihms_4fb2dbd/ratsSurface.c:100>
                calloc()
                free()
            move() <void move (Rat_p rat, Dir dir) at cpp-algortihms_4fb2dbd/ratsSurface.c:199>:
        getPosAsStr() <char *getPosAsStr (Pos_p p) at cpp-algortihms_4fb2dbd/ratsSurface.c:301>:
            calloc()
            itoa() <char *itoa (int num, char *str, int base) at cpp-algortihms_4fb2dbd/ratsSurface.c:353>:
                reverse() <void reverse (char *str, int length) at cpp-algortihms_4fb2dbd/ratsSurface.c:339>
            strcat()
            strncat()
            strlen()
main() <int main () at cpp-algortihms_4fb2dbd/hashTable.c:135>:
    allocate_hashTable() <HashTable *allocate_hashTable (int m) at cpp-algortihms_4fb2dbd/hashTable.c:104>:
        CREATE_NEW()
        printf()
        abort()
        calloc()
    chained_hash_insert() <void chained_hash_insert (HashTable *T, entry_ptr newEntry) at cpp-algortihms_4fb2dbd/hashTable.c:37>:
        printf()
        abort()
        hashFunction() <int hashFunction (HashTable *T, char k) at cpp-algortihms_4fb2dbd/hashTable.c:28>:
            printf()
            abort()
    create_newEntry() <entry_ptr create_newEntry (char key, int val) at cpp-algortihms_4fb2dbd/hashTable.c:121>:
        CREATE_NEW()
        printf()
        abort()
    chained_hash_search() <entry_ptr chained_hash_search (HashTable *T, char k) at cpp-algortihms_4fb2dbd/hashTable.c:59>:
        printf()
        abort()
        hashFunction() <int hashFunction (HashTable *T, char k) at cpp-algortihms_4fb2dbd/hashTable.c:28>:
            printf()
            abort()
    printf()
    chained_hash_delete() <bool chained_hash_delete (HashTable *T, entry_ptr ep) at cpp-algortihms_4fb2dbd/hashTable.c:82>:
        hashFunction() <int hashFunction (HashTable *T, char k) at cpp-algortihms_4fb2dbd/hashTable.c:28>:
            printf()
            abort()
        free()
main() <int main () at cpp-algortihms_4fb2dbd/quickSort.c:69>:
    quickSortWrapper() <void quickSortWrapper (int *arrptr, int arrlength) at cpp-algortihms_4fb2dbd/quickSort.c:67>:
        quickSort() <void quickSort (int *arrptr, int fIndex, int lIndex) at cpp-algortihms_4fb2dbd/quickSort.c:58> (R):
            partition() <int partition (int *arrptr, int fIndex, int lIndex) at cpp-algortihms_4fb2dbd/quickSort.c:30>:
                swap()
            quickSort() <void quickSort (int *arrptr, int fIndex, int lIndex) at cpp-algortihms_4fb2dbd/quickSort.c:58> (recursive: see 3)
    ARRAY_LENGTH()
    printf()
    printarray()
main() <int main () at cpp-algortihms_4fb2dbd/doublyLinkedList.c:74>:
    createDoublyLinkedList() <DoublyLinkedListPtr createDoublyLinkedList () at cpp-algortihms_4fb2dbd/doublyLinkedList.c:28>:
        malloc()
    list_insert() <void list_insert (DoublyLinkedListPtr L, int item) at cpp-algortihms_4fb2dbd/doublyLinkedList.c:57>:
        malloc()
    list_traverse() <void list_traverse (DoublyLinkedListPtr L) at cpp-algortihms_4fb2dbd/doublyLinkedList.c:38>:
        printf()
        fprintf()
    list_search() <NodePtr list_search (DoublyLinkedListPtr L, int item) at cpp-algortihms_4fb2dbd/doublyLinkedList.c:48>
    fprintf()
    printf()
    list_delete() <void list_delete (NodePtr node) at cpp-algortihms_4fb2dbd/doublyLinkedList.c:69>:
        free()
main() <int main () at cpp-algortihms_4fb2dbd/longestPalindrome.c:56>:
    PalindromeLengthPuzzle() <int PalindromeLengthPuzzle (char *input1[]) at cpp-algortihms_4fb2dbd/longestPalindrome.c:29>:
        calloc()
        lpd() <int lpd (char *str, int p, int q, int **t) at cpp-algortihms_4fb2dbd/longestPalindrome.c:5> (R):
            lpd() <int lpd (char *str, int p, int q, int **t) at cpp-algortihms_4fb2dbd/longestPalindrome.c:5> (recursive: see 4)
        strlen()
    printf()
main() <int main () at cpp-algortihms_4fb2dbd/heapSort.c:63>:
    heapSort() <void heapSort (int *arrptr, size_t arr_length) at cpp-algortihms_4fb2dbd/heapSort.c:52>:
        buildHeap() <HeapPtr buildHeap (int *arrptr, size_t arr_length) at cpp-algortihms_4fb2dbd/heapSort.c:41>:
            malloc()
            MID_HEAP_INDEX()
            heapify() <void heapify (HeapPtr aHeap, size_t i) at cpp-algortihms_4fb2dbd/heapSort.c:23> (R):
                LEFT()
                RIGHT()
                swap() <inline void swap (int *num1, int *num2) at cpp-algortihms_4fb2dbd/heapSort.c:20>
                MID_HEAP_INDEX()
                heapify() <void heapify (HeapPtr aHeap, size_t i) at cpp-algortihms_4fb2dbd/heapSort.c:23> (recursive: see 6)
        swap() <inline void swap (int *num1, int *num2) at cpp-algortihms_4fb2dbd/heapSort.c:20>
        heapify() <void heapify (HeapPtr aHeap, size_t i) at cpp-algortihms_4fb2dbd/heapSort.c:23> (R):
            LEFT()
            RIGHT()
            swap() <inline void swap (int *num1, int *num2) at cpp-algortihms_4fb2dbd/heapSort.c:20>
            MID_HEAP_INDEX()
            heapify() <void heapify (HeapPtr aHeap, size_t i) at cpp-algortihms_4fb2dbd/heapSort.c:23> (recursive: see 13)
        free()
    ARRAY_LENGTH()
    printf()
main() <int main () at cpp-algortihms_4fb2dbd/merge_sorted_arrays.c:29>:
    merge_sorted_arrays() <int *merge_sorted_arrays (int *lptr1, size_t count1, int *lptr2, size_t count2) at cpp-algortihms_4fb2dbd/merge_sorted_arrays.c:7>:
        calloc()
    printf()
main() <int main () at cpp-algortihms_4fb2dbd/mergeSort.c:59>:
    printf()
    printarray() <void printarray (int *ptr, int firstIndex, int lastIndex) at cpp-algortihms_4fb2dbd/mergeSort.c:15>:
        printf()
    mergesort() <void mergesort (int *ptr, int firstIndex, int lastIndex) at cpp-algortihms_4fb2dbd/mergeSort.c:48> (R):
        mergesort() <void mergesort (int *ptr, int firstIndex, int lastIndex) at cpp-algortihms_4fb2dbd/mergeSort.c:48> (recursive: see 5)
        merge() <void merge (int *ptr, int firstIndex, int mid, int lastIndex) at cpp-algortihms_4fb2dbd/mergeSort.c:24>:
            calloc()
            memmove()
            free()
main() <int main () at cpp-algortihms_4fb2dbd/graph.c:150>:
    GraphCreate() <graphADT GraphCreate () at cpp-algortihms_4fb2dbd/graph.c:51>:
        CREATE_NEW()
    GraphAddVertex() <void GraphAddVertex (graphADT graph, graphElementT elem) at cpp-algortihms_4fb2dbd/graph.c:83>:
        getVertex() <vertexT *getVertex (graphADT graph, graphElementT elem) at cpp-algortihms_4fb2dbd/graph.c:58>:
        fprintf()
        CREATE_NEW()
        APPEND_TO_LINKLIST()
    GraphAddEdge() <void GraphAddEdge (vertexT *from, vertexT *to) at cpp-algortihms_4fb2dbd/graph.c:69>:
        fprintf()
        CREATE_NEW()
        APPEND_TO_LINKLIST()
    getVertex() <vertexT *getVertex (graphADT graph, graphElementT elem) at cpp-algortihms_4fb2dbd/graph.c:58>:
    printf()
    isDestReachable() <bool isDestReachable (graphADT graph, graphElementT from, graphElementT to) at cpp-algortihms_4fb2dbd/graph.c:133>:
        getVertex() <vertexT *getVertex (graphADT graph, graphElementT elem) at cpp-algortihms_4fb2dbd/graph.c:58>:
        markAllVerticesNotVisited() <void markAllVerticesNotVisited (graphADT graph) at cpp-algortihms_4fb2dbd/graph.c:101>:
        GraphIsReachable() <bool GraphIsReachable (graphADT graph, vertexT *src, vertexT *dest) at cpp-algortihms_4fb2dbd/graph.c:111> (R):
            GraphIsReachable() <bool GraphIsReachable (graphADT graph, vertexT *src, vertexT *dest) at cpp-algortihms_4fb2dbd/graph.c:111> (recursive: see 18)
main() <int main () at cpp-algortihms_4fb2dbd/simpleStack.c:34>:
    createStack() <StackPtr createStack (int stackSize) at cpp-algortihms_4fb2dbd/simpleStack.c:14>:
        malloc()
        calloc()
    push() <void push (StackPtr stack, int item) at cpp-algortihms_4fb2dbd/simpleStack.c:24>:
        printf()
    printf()
    pop() <int pop (StackPtr stack) at cpp-algortihms_4fb2dbd/simpleStack.c:31>:
        isStackEmpty() <int isStackEmpty (StackPtr stack) at cpp-algortihms_4fb2dbd/simpleStack.c:22>
